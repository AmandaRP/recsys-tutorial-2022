---
title: "RecSys Tutorial"
author: "Amanda Peterson"
format: 
  revealjs:
    scrollable: false
    #theme: dark
    footer: "SCADS 2022 RecSys Tutorial"
    #logo: logo.png
    transition: slide
    background-transition: fade
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

##  {background-iframe="https://amanda.rbind.io/"}

## Definitions

::: {.panel-tabset}

### Collaborative Filtering 

Model patterns across all users' [feedback history]{.underline}.

-   **Pro**: Perform better than content filtering models when collaborative information is available.

-   **Con**: Unable to make recommendations in [cold start]{.underline} scenarios where little history is available for new users or items.

### Content Filtering

Individualized models focus on a single user's feedback history (or a group of like users) + metadata associated with items.

-   **Pro**: Able to handle new items.

-   **Cons**: Models for each user (or group) are fit in isolation. Require large amounts of data for each user.

### Hybrid

Collaborative + Content Filtering

-   **Pro**: Overcomes challenges of both types of filtering. User *and* item metadata (aka [side information]{.underline}) can be included.

:::

## Definitions

**Explicit Feedback** **(or rating)**: Explicit rating given by the user for a product (e.g. star rating, thumbs up/down)

![](images/star_rating.jpg) 

**Implicit Feedback**: Actions taken by the user which can be used infer preferences about products (e.g. click data, dwell time, purchases)

## User-item Rating Array

![](images/user_item_matrix.png) 


## User-item Rating Array (Implicit)

![](images/user_item_matrix_implicit.png) 

## User-Item Array as a Bipartite Graph

## Dimension Reduction of the User-item Array

## Recommender Technology Timeline {transition="slide-in none-out" auto-animate=true}

![](images/nick_pentreath_timeline.png) 

[Presentation by Nick Pentreath at the 2018 Spark + AI Summit](https://youtu.be/y_TzOOCJqxI)



## {transition="none" auto-animate=true}

![](images/nick_pentreath_timeline.png){fig-align="center" width=70%} 

![](images/red_arrow.png){.absolute top=25 left=110 width="50" height="25"}

**Item-item similarity**: Can be computed using cosine or Jaccard similarity, for example.

![](images/user_item_matrix_item_sim.png){fig-align="center" width=30%}



## {transition="none" auto-animate=true}

![](images/nick_pentreath_timeline.png){fig-align="center" width=70%} 


![](images/red_arrow.png){.absolute top=150 left=220 width="50" height="25"}


![](images/netflix_fig2.png){fig-align="center" width=30%}

[Matrix Facorization Techniques for Recommender Systems](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.147.8295&rep=rep1&type=pdf) by Koren, Bell, and Volinsky


## {transition="none" auto-animate=true}


![](images/nick_pentreath_timeline.png){fig-align="center" width=70%}

![](images/red_arrow.png){.absolute top=25 left=360 width="50" height="25"}



## NCF

![](https://gitlab.evoforge.org/arpete2/dlrs-catalog/-/raw/main/images/ncf.png)



## DeepFM

![](https://gitlab.evoforge.org/arpete2/dlrs-catalog/-/raw/main/images/DeepFM.png)


## DCNV2


![](https://gitlab.evoforge.org/arpete2/dlrs-catalog/-/raw/main/images/dcnv2.png)

## DLRM

![](https://gitlab.evoforge.org/arpete2/dlrs-catalog/-/raw/main/images/dlrm.png)

## Evaluation Metrics for Recommendation Systems

![](images/evalrs.png){.absolute top=0 left=800 width="180" height="200"}

::: {.panel-tabset}

### Accuracy 

::: {.incremental}
  - Hit Rate at k (HR@k)
  - Mean Average Precision at k (MAP@k)
  - Normalized Discounted Cumulative Gain (NDCG@k)
:::
  
### Beyond accuracy

::: {.incremental}
  - Diversity at k
  - Novelty at k
:::

:::

## News Recommendation




